// Generated by CoffeeScript 1.4.0

/*
# no-click-delay.coffee: kind of CoffeeScript version of Matteo Spinelli's NoClickDelay.js
# description:
#  There is a about 300ms delay of click event on iOS Safari and Android browser.
#  It is to detect double tap zooming. You may not need it for some kinds of elements.
#  no-click-delay.coffee eliminates this delay for specified kind of elements in specified element.
# 2013 (C) ICHIKAWA, Yuji (New 3 Rs)
*/


(function() {
  var NoClickDelay;

  NoClickDelay = (function() {

    NoClickDelay.isTouch = 'ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch;

    function NoClickDelay(elementOrId, tags) {
      if (elementOrId == null) {
        elementOrId = document.body;
      }
      if (tags == null) {
        tags = ['BUTTON', 'A', 'INPUT'];
      }
      this.element = typeof elementOrId === 'string' ? document.getElementById(elementOrId) : elementOrId;
      this.tags = tags.map(function(e) {
        return e.toUpperCase();
      });
      if (NoClickDelay.isTouch) {
        this.element.addEventListener('touchstart', this, false);
      }
    }

    NoClickDelay.prototype.handleEvent = function(event) {
      switch (event.type) {
        case 'touchstart':
          return this.onTouchStart(event);
        case 'touchmove':
          return this.onTouchMove(event);
        case 'touchend':
          return this.onTouchEnd(event);
      }
    };

    NoClickDelay.prototype.onTouchStart = function(event) {
      var _this = this;
      if (this.tags.some(function(e) {
        return event.target.tagName === e;
      })) {
        this.moved = false;
        this.element.addEventListener('touchmove', this, false);
        this.element.addEventListener('touchend', this, false);
        event.target.focus();
        return event.preventDefault();
      }
    };

    NoClickDelay.prototype.onTouchMove = function(event) {
      return this.moved = true;
    };

    NoClickDelay.prototype.onTouchEnd = function(event) {
      var clickEvent;
      this.element.removeEventListener('touchmove', this, false);
      this.element.removeEventListener('touchend', this, false);
      if (!this.moved) {
        clickEvent = document.createEvent('MouseEvents');
        clickEvent.initEvent('click', true, true);
        return event.target.dispatchEvent(clickEvent);
      }
    };

    return NoClickDelay;

  })();

  window.NoClickDelay = NoClickDelay;

}).call(this);
